<!DOCTYPE html ><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>Csv.OpenRead(String, Char, Encoding, Boolean, CsvOpts) Method</title><meta name="Title" content="OpenRead(String, Char, Encoding, Boolean, CsvOpts)" /><meta name="Help.Id" content="M:FolkerKinzel.CsvTools.Csv.OpenRead(System.String,System.Char,System.Text.Encoding,System.Boolean,FolkerKinzel.CsvTools.CsvOpts)" /><meta name="Help.ContentType" content="Reference" /><meta name="container" content="FolkerKinzel.CsvTools" /><meta name="guid" content="eb6980b9-aa60-3189-0bec-9c9fef839605" /><meta name="Description" content="Opens a CSV file for reading." /><meta name="tocFile" content="../toc/IDEAAA.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div class="level-item"><img src="../icons/Help.png" /></div><div id="DocumentationTitle" class="level-item">FolkerKinzel.CsvTools</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a><a class="dropdown-item languageFilterItem" data-languageId="vb">VB</a><a class="dropdown-item languageFilterItem" data-languageId="cpp">C++</a><a class="dropdown-item languageFilterItem" data-languageId="fs">F#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div id="ContentContainer" class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="Resizer" class="is-hidden"></div><div id="TopicContent" class="column content is-7"><h1>Csv<span id="LST7A0978BA_0" data-languageSpecificText="cpp=::|nu=."></span>Open<wbr />Read(String, Char, Encoding, Boolean, Csv<wbr />Opts) Method</h1><div class="summary">Opens a CSV file for reading.</div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Definition</h2><div id="IDBSection"><strong>Namespace:</strong> <a href="6fb8ee98-40ba-fd2d-5684-d21f3ef90dce.htm">FolkerKinzel.CsvTools</a><br /><strong>Assembly:</strong> FolkerKinzel.CsvTools (in FolkerKinzel.CsvTools.dll) Version: 2.0.1+2345335399184346d9b2cc992ed5c814406052c1<div class="codeSnippet" data-codeSnippetLanguage="cs"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs"><span class="keyword">public</span> <span class="keyword">static</span> <span class="identifier">CsvReader</span> <span class="identifier">OpenRead</span>(
	<span class="identifier">string</span> <span class="parameter">filePath</span>,
	<span class="identifier">char</span> <span class="parameter">delimiter</span> = ',',
	<span class="identifier">Encoding</span>? <span class="parameter">textEncoding</span> = <span class="keyword">null</span>,
	<span class="identifier">bool</span> <span class="parameter">isHeaderPresent</span> = <span class="keyword">true</span>,
	<span class="identifier">CsvOpts</span> <span class="parameter">options</span> = <span class="identifier">CsvOpts</span>.Default
)</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="vb"><div class="codeHeader"><span class="codeHeaderTitle">VB</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-vb"><span class="keyword">Public</span> <span class="keyword">Shared</span> <span class="keyword">Function</span> <span class="identifier">OpenRead</span> ( 
	<span class="parameter">filePath</span> <span class="keyword">As</span> <span class="identifier">String</span>,
	Optional <span class="parameter">delimiter</span> <span class="keyword">As</span> <span class="identifier">Char</span> = ","C,
	Optional <span class="parameter">textEncoding</span> <span class="keyword">As</span> <span class="identifier">Encoding</span> = <span class="keyword">Nothing</span>,
	Optional <span class="parameter">isHeaderPresent</span> <span class="keyword">As</span> <span class="identifier">Boolean</span> = <span class="keyword">true</span>,
	Optional <span class="parameter">options</span> <span class="keyword">As</span> <span class="identifier">CsvOpts</span> = <span class="identifier">CsvOpts</span>.Default
) <span class="keyword">As</span> <span class="identifier">CsvReader</span></code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="cpp"><div class="codeHeader"><span class="codeHeaderTitle">C++</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cpp"><span class="keyword">public</span>:
<span class="keyword">static</span> <span class="identifier">CsvReader</span>^ <span class="identifier">OpenRead</span>(
	<span class="identifier">String</span>^ <span class="parameter">filePath</span>, 
	<span class="identifier">wchar_t</span> <span class="parameter">delimiter</span> = L',', 
	<span class="identifier">Encoding</span>^ <span class="parameter">textEncoding</span> = <span class="keyword">nullptr</span>, 
	<span class="identifier">bool</span> <span class="parameter">isHeaderPresent</span> = <span class="keyword">true</span>, 
	<span class="identifier">CsvOpts</span> <span class="parameter">options</span> = <span class="identifier">CsvOpts</span>::Default
)</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="fs"><div class="codeHeader"><span class="codeHeaderTitle">F#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-fs"><span class="keyword">static</span> <span class="keyword">member</span> <span class="identifier">OpenRead</span> : 
        <span class="parameter">filePath</span> : <span class="identifier">string</span> * 
        ?<span class="parameter">delimiter</span> : <span class="identifier">char</span> * 
        ?<span class="parameter">textEncoding</span> : <span class="identifier">Encoding</span> * 
        ?<span class="parameter">isHeaderPresent</span> : <span class="identifier">bool</span> * 
        ?<span class="parameter">options</span> : <span class="identifier">CsvOpts</span> 
(* Defaults:
        <span class="keyword">let </span><span class="identifier">_</span><span class="identifier">delimiter</span> = defaultArg <span class="identifier">delimiter</span> ','
        <span class="keyword">let </span><span class="identifier">_</span><span class="identifier">textEncoding</span> = defaultArg <span class="identifier">textEncoding</span> <span class="keyword">null</span>
        <span class="keyword">let </span><span class="identifier">_</span><span class="identifier">isHeaderPresent</span> = defaultArg <span class="identifier">isHeaderPresent</span> <span class="keyword">true</span>
        <span class="keyword">let </span><span class="identifier">_</span><span class="identifier">options</span> = defaultArg <span class="identifier">options</span> <span class="identifier">CsvOpts</span>.Default
*)
<span class="keyword">-&gt;</span> <span class="identifier">CsvReader</span> </code></pre></div></div><h4 class="quickLinkHeader">Parameters</h4><dl><dt class="has-text-weight-normal"><span class="parameter">filePath</span>  <a href="https://learn.microsoft.com/dotnet/api/system.string" target="_blank" rel="noopener noreferrer">String</a></dt><dd>File path of the CSV file.</dd><dt class="has-text-weight-normal"><span class="parameter">delimiter</span>  <a href="https://learn.microsoft.com/dotnet/api/system.char" target="_blank" rel="noopener noreferrer">Char</a>  (Optional)</dt><dd>The field separator character.</dd><dt class="has-text-weight-normal"><span class="parameter">textEncoding</span>  <a href="https://learn.microsoft.com/dotnet/api/system.text.encoding" target="_blank" rel="noopener noreferrer">Encoding</a>  (Optional)</dt><dd>The text encoding to be used to read the CSV file
            or <span class="code">null</span> for <a href="https://learn.microsoft.com/dotnet/api/system.text.encoding.utf8" target="_blank" rel="noopener noreferrer">UTF8</a>.</dd><dt class="has-text-weight-normal"><span class="parameter">isHeaderPresent</span>  <a href="https://learn.microsoft.com/dotnet/api/system.boolean" target="_blank" rel="noopener noreferrer">Boolean</a>  (Optional)</dt><dd><span class="code">true</span>, to interpret the first line as a header, 
            otherwise <span class="code">false</span>.</dd><dt class="has-text-weight-normal"><span class="parameter">options</span>  <a href="437abed9-0166-18a2-84e9-de068e8f5abe.htm">CsvOpts</a>  (Optional)</dt><dd>Options for reading the CSV file.</dd></dl><h4 class="quickLinkHeader">Return Value</h4><a href="1e4517fe-fdfe-d1b0-d261-9b04544f40b5.htm">CsvReader</a><br />A <a href="1e4517fe-fdfe-d1b0-d261-9b04544f40b5.htm">CsvReader</a> that allows you to iterate through the CSV data.</div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Remarks</h2><div id="IDHCSection"><p>
            The method arguments can be determined automatically with <a href="6315f545-e8c5-f8a3-977c-2ad0aa07d57a.htm">CsvAnalyzer</a> - or use
            <a href="14ff1210-71c3-7f06-24f2-beab4dea6e1d.htm">OpenReadAnalyzed(String, Encoding, Header, Boolean, Int32)</a>.
            </p><p>
            When importing CSV data from Excel, the appropriate arguments can be determined 
            with <a href="8997540d-a632-cf81-5904-6b4a1139c2e1.htm">GetExcelArguments<span id="LST7A0978BA_1" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a>.
            </p></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Example</h2><div id="IDICSection"><article class="message is-info"><div class="message-header"><p><span class="icon"><i class="fa fa-info-circle"></i></span>  Note</p></div><div class="message-body">
            In the following code examples - for easier readability - exception handling
            has been omitted.
            </div></article><div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs">using FolkerKinzel.CsvTools;

namespace Examples;

internal static class DisableCachingExample
{
    public static void DisableCachingSideEffects(string filePath)
    {
        string[][] friends = [
                                ["Name", "City"],
                                ["Ingrid","Berlin"],
                                ["Joyce","New York"],
                                ["Horst","Hamburg"],
                                ["John","New York"],
                             ];
        friends.SaveCsv(filePath);

        Console.WriteLine("Which friends live in New York?: ");
        Console.Write("  Determine with cache enabled:  ");

        // Caching is enabled by default.
        using (CsvReader csv = Csv.OpenRead(filePath))
        {
            foreach (CsvRecord record in
                // ToArray() caches the results:
                csv.Where(x =&gt; x["City"].Span.Equals("New York", StringComparison.Ordinal)).ToArray())
            {
                Console.Write(record["Name"]);
                Console.Write(' ');
            }

            Console.WriteLine();
        }

        Console.Write("  Determine with cache disabled: ");

        // If you set the flag CsvOpts.DisableCaching and then try to cache the data,
        // you will get the wrong results:
        using (CsvReader csv = Csv.OpenRead(filePath,
                                            options: CsvOpts.Default.Set(CsvOpts.DisableCaching)))
        {
            foreach (CsvRecord record in
                // NOTE: Removing ".ToArray()" would cause the correct results.
                csv.Where(x =&gt; x["City"].Span.Equals("New York", StringComparison.Ordinal)).ToArray())
            {
                Console.Write(record["Name"]);
                Console.Write(' ');
            }
        }
    }
}
/*
Console Output:

Which friends live in New York?:
  Determine with cache enabled:  Joyce John
  Determine with cache disabled: John John
*/</code></pre></div></div></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Exceptions</h2><div id="IDJCSection"><table class="table is-hoverable"><tr><td><a href="https://learn.microsoft.com/dotnet/api/system.argumentnullexception" target="_blank" rel="noopener noreferrer">ArgumentNullException</a></td><td><span class="parameter">filePath</span> is <span class="code">null</span>.</td></tr><tr><td><a href="https://learn.microsoft.com/dotnet/api/system.argumentexception" target="_blank" rel="noopener noreferrer">ArgumentException</a></td><td><span class="parameter">filePath</span> is not a valid
            file path.</td></tr><tr><td><a href="https://learn.microsoft.com/dotnet/api/system.argumentoutofrangeexception" target="_blank" rel="noopener noreferrer">ArgumentOutOfRangeException</a></td><td><span class="parameter">delimiter</span> is either 
            the double quotes <span class="code">"</span> or a line break character ('\r' or  '\n').</td></tr><tr><td><a href="https://learn.microsoft.com/dotnet/api/system.io.ioexception" target="_blank" rel="noopener noreferrer">IOException</a></td><td>I/O error.</td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>See Also</h2><div id="seeAlsoSection"><h4>Reference</h4><div><a href="287b6348-e9e6-49e6-b15a-5ecc0d44fcb8.htm">Csv Class</a></div><div><a href="f1f29c4a-20c8-ede0-18d5-3e1679b58630.htm">OpenRead Overload</a></div><div><a href="6fb8ee98-40ba-fd2d-5684-d21f3ef90dce.htm">FolkerKinzel.CsvTools Namespace</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Definition</a><ul class="menu"><li><a class="quickLink">Parameters</a></li><li><a class="quickLink">Return Value</a></li></ul></li><li><a class="quickLink">Remarks</a></li><li><a class="quickLink">Example</a></li><li><a class="quickLink">Exceptions</a></li><li><a class="quickLink">See Also</a></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div id="FooterContent" class="column"><p>Copyright © 2020 Folker Kinzel</p> 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
hljs.highlightAll();
});</script></body></html>