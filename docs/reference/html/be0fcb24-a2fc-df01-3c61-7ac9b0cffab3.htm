<!DOCTYPE html ><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>Csv.OpenReadAnalyzed Method</title><meta name="Title" content="OpenReadAnalyzed" /><meta name="Help.Id" content="M:FolkerKinzel.CsvTools.Csv.OpenReadAnalyzed(System.String,FolkerKinzel.CsvTools.Header,System.Text.Encoding,System.Int32,System.Boolean)" /><meta name="Help.ContentType" content="Reference" /><meta name="container" content="FolkerKinzel.CsvTools" /><meta name="guid" content="be0fcb24-a2fc-df01-3c61-7ac9b0cffab3" /><meta name="Description" content="Analyzes the CSV file referenced by first and then opens a to read its content." /><meta name="tocFile" content="../toc/IDAAA.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div class="level-item"><img src="../icons/Help.png" /></div><div id="DocumentationTitle" class="level-item">FolkerKinzel.CsvTools</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a><a class="dropdown-item languageFilterItem" data-languageId="vb">VB</a><a class="dropdown-item languageFilterItem" data-languageId="cpp">C++</a><a class="dropdown-item languageFilterItem" data-languageId="fs">F#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div id="ContentContainer" class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="Resizer" class="is-hidden"></div><div id="TopicContent" class="column content is-7"><h1>Csv<span id="LST14C7F2AC_0" data-languageSpecificText="cpp=::|nu=."></span>Open<wbr />Read<wbr />Analyzed Method</h1><div class="summary">Analyzes the CSV file referenced by <span class="parameter">filePath</span>
            first and then opens a <a href="1e4517fe-fdfe-d1b0-d261-9b04544f40b5.htm">CsvReader</a> to read its content.
            </div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Definition</h2><div id="IDBSection"><strong>Namespace:</strong> <a href="6fb8ee98-40ba-fd2d-5684-d21f3ef90dce.htm">FolkerKinzel.CsvTools</a><br /><strong>Assembly:</strong> FolkerKinzel.CsvTools (in FolkerKinzel.CsvTools.dll) Version: 2.0.0-beta.4+949dec359694f8106354b19f97b13b6dc2b7a102<div class="codeSnippet" data-codeSnippetLanguage="cs"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs"><span class="keyword">public</span> <span class="keyword">static</span> <span class="identifier">CsvReader</span> <span class="identifier">OpenReadAnalyzed</span>(
	<span class="identifier">string</span> <span class="parameter">filePath</span>,
	<span class="identifier">Header</span> <span class="parameter">header</span> = <span class="identifier">Header</span>.ProbablyPresent,
	<span class="identifier">Encoding</span>? <span class="parameter">textEncoding</span> = <span class="keyword">null</span>,
	<span class="identifier">int</span> <span class="parameter">analyzedLines</span> = 5,
	<span class="identifier">bool</span> <span class="parameter">disableCaching</span> = <span class="keyword">false</span>
)</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="vb"><div class="codeHeader"><span class="codeHeaderTitle">VB</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-vb"><span class="keyword">Public</span> <span class="keyword">Shared</span> <span class="keyword">Function</span> <span class="identifier">OpenReadAnalyzed</span> ( 
	<span class="parameter">filePath</span> <span class="keyword">As</span> <span class="identifier">String</span>,
	Optional <span class="parameter">header</span> <span class="keyword">As</span> <span class="identifier">Header</span> = <span class="identifier">Header</span>.ProbablyPresent,
	Optional <span class="parameter">textEncoding</span> <span class="keyword">As</span> <span class="identifier">Encoding</span> = <span class="keyword">Nothing</span>,
	Optional <span class="parameter">analyzedLines</span> <span class="keyword">As</span> <span class="identifier">Integer</span> = 5,
	Optional <span class="parameter">disableCaching</span> <span class="keyword">As</span> <span class="identifier">Boolean</span> = <span class="keyword">false</span>
) <span class="keyword">As</span> <span class="identifier">CsvReader</span></code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="cpp"><div class="codeHeader"><span class="codeHeaderTitle">C++</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cpp"><span class="keyword">public</span>:
<span class="keyword">static</span> <span class="identifier">CsvReader</span>^ <span class="identifier">OpenReadAnalyzed</span>(
	<span class="identifier">String</span>^ <span class="parameter">filePath</span>, 
	<span class="identifier">Header</span> <span class="parameter">header</span> = <span class="identifier">Header</span>::ProbablyPresent, 
	<span class="identifier">Encoding</span>^ <span class="parameter">textEncoding</span> = <span class="keyword">nullptr</span>, 
	<span class="identifier">int</span> <span class="parameter">analyzedLines</span> = 5, 
	<span class="identifier">bool</span> <span class="parameter">disableCaching</span> = <span class="keyword">false</span>
)</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="fs"><div class="codeHeader"><span class="codeHeaderTitle">F#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-fs"><span class="keyword">static</span> <span class="keyword">member</span> <span class="identifier">OpenReadAnalyzed</span> : 
        <span class="parameter">filePath</span> : <span class="identifier">string</span> * 
        ?<span class="parameter">header</span> : <span class="identifier">Header</span> * 
        ?<span class="parameter">textEncoding</span> : <span class="identifier">Encoding</span> * 
        ?<span class="parameter">analyzedLines</span> : <span class="identifier">int</span> * 
        ?<span class="parameter">disableCaching</span> : <span class="identifier">bool</span> 
(* Defaults:
        <span class="keyword">let </span><span class="identifier">_</span><span class="identifier">header</span> = defaultArg <span class="identifier">header</span> <span class="identifier">Header</span>.ProbablyPresent
        <span class="keyword">let </span><span class="identifier">_</span><span class="identifier">textEncoding</span> = defaultArg <span class="identifier">textEncoding</span> <span class="keyword">null</span>
        <span class="keyword">let </span><span class="identifier">_</span><span class="identifier">analyzedLines</span> = defaultArg <span class="identifier">analyzedLines</span> 5
        <span class="keyword">let </span><span class="identifier">_</span><span class="identifier">disableCaching</span> = defaultArg <span class="identifier">disableCaching</span> <span class="keyword">false</span>
*)
<span class="keyword">-&gt;</span> <span class="identifier">CsvReader</span> </code></pre></div></div><h4 class="quickLinkHeader">Parameters</h4><dl><dt class="has-text-weight-normal"><span class="parameter">filePath</span>  <a href="https://learn.microsoft.com/dotnet/api/system.string" target="_blank" rel="noopener noreferrer">String</a></dt><dd>File path of the CSV file.</dd><dt class="has-text-weight-normal"><span class="parameter">header</span>  <a href="0e207fe7-b6ad-9280-689f-779ab5678885.htm">Header</a>  (Optional)</dt><dd>A supposition that is made about the presence of a header row.</dd><dt class="has-text-weight-normal"><span class="parameter">textEncoding</span>  <a href="https://learn.microsoft.com/dotnet/api/system.text.encoding" target="_blank" rel="noopener noreferrer">Encoding</a>  (Optional)</dt><dd>
            The text encoding to be used to read the CSV file, or <span class="code">null</span> to determine the <a href="https://learn.microsoft.com/dotnet/api/system.text.encoding" target="_blank" rel="noopener noreferrer">Encoding</a>
            automatically from the byte order mark (BOM).
            </dd><dt class="has-text-weight-normal"><span class="parameter">analyzedLines</span>  <a href="https://learn.microsoft.com/dotnet/api/system.int32" target="_blank" rel="noopener noreferrer">Int32</a>  (Optional)</dt><dd>Maximum number of lines to analyze in the CSV file. The minimum 
            value is <a href="e1089601-0c54-4d91-7cd6-64716d66184d.htm">AnalyzedLinesMinCount</a>. If the file has fewer lines than 
            <span class="parameter">analyzedLines</span>, it will be analyzed completely. (You can specify 
            <a href="https://learn.microsoft.com/dotnet/api/system.int32.maxvalue" target="_blank" rel="noopener noreferrer">Int32.MaxValue</a> to analyze the entire file in any case.)</dd><dt class="has-text-weight-normal"><span class="parameter">disableCaching</span>  <a href="https://learn.microsoft.com/dotnet/api/system.boolean" target="_blank" rel="noopener noreferrer">Boolean</a>  (Optional)</dt><dd><span class="code">true</span> to set the <a href="437abed9-0166-18a2-84e9-de068e8f5abe.htm">DisableCaching</a> flag, 
            otherwise <span class="code">false</span>.</dd></dl><h4 class="quickLinkHeader">Return Value</h4><a href="1e4517fe-fdfe-d1b0-d261-9b04544f40b5.htm">CsvReader</a><br />A <a href="1e4517fe-fdfe-d1b0-d261-9b04544f40b5.htm">CsvReader</a> that allows to iterate the data.</div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Remarks</h2><div id="IDHCSection"><p>
            The method performs a statistical analysis on the CSV file to find the appropriate 
            parameters for reading the file. The result of the analysis is therefore always only an estimate, 
            the accuracy of which increases with the number of lines analyzed. The analysis is time-consuming 
            because the CSV file has to be accessed for reading.
            </p><p>
            This method also automatically determines the <a href="https://learn.microsoft.com/dotnet/api/system.text.encoding" target="_blank" rel="noopener noreferrer">Encoding</a> of the CSV file from the
            byte order mark (BOM) if the argument of the <span class="parameter">textEncoding</span> parameter is <span class="code">null</span>.
            If the <a href="https://learn.microsoft.com/dotnet/api/system.text.encoding" target="_blank" rel="noopener noreferrer">Encoding</a> cannot be determined automatically, <a href="https://learn.microsoft.com/dotnet/api/system.text.encoding.utf8" target="_blank" rel="noopener noreferrer">UTF8</a> is used.
            </p><p>
            The field delimiters COMMA (<span class="code">','</span>, %x2C), SEMICOLON  (<span class="code">';'</span>, %x3B), HASH (<span class="code">'#'</span>, %x23),
            TAB (<span class="code">'\t'</span>, %x09), and SPACE (<span class="code">' '</span>, %x20) are recognized automatically.
            </p></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Example</h2><div id="IDICSection"><article class="message is-info"><div class="message-header"><p><span class="icon"><i class="fa fa-info-circle"></i></span>  Note</p></div><div class="message-body">
            In the following code examples - for easier readability - exception handling
            has been omitted.
            </div></article><div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs">using System.Text;
using FolkerKinzel.CsvTools;

namespace Examples;

internal static class CsvAnalyzerExample
{
    public static void ParseForeignCsvFile(string filePath)
    {
        const string nonStandardCsv = """


            First # "Second # Column"   
            1,"2",3 # "Get's
            too much" # LOST?

            too few


            """;

        File.WriteAllText(filePath, nonStandardCsv, Encoding.Unicode);

        using CsvReader csv = Csv.OpenReadAnalyzed(filePath);
        CsvRecord[] data = [.. csv];

        using (CsvWriter writer = Csv.OpenWrite(filePath, data[0].ColumnNames))
        {
            foreach (CsvRecord record in data)
            {
                writer.Record.FillWith(record.Values);
                writer.WriteRecord();
            }
        }

        Console.WriteLine(File.ReadAllText(filePath));
    }
}

/*
 Console output:

Column1,Column2,Column3
First ,Second # Column,
"1,""2"",3 ","Get's
too much", LOST?
too few,,

*/</code></pre></div></div></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Exceptions</h2><div id="IDJCSection"><table class="table is-hoverable"><tr><td><a href="https://learn.microsoft.com/dotnet/api/system.argumentnullexception" target="_blank" rel="noopener noreferrer">ArgumentNullException</a></td><td><span class="parameter">filePath</span> is <span class="code">null</span>.</td></tr><tr><td><a href="https://learn.microsoft.com/dotnet/api/system.argumentoutofrangeexception" target="_blank" rel="noopener noreferrer">ArgumentOutOfRangeException</a></td><td><p><span class="parameter">header</span> is not a defined value of 
            the <a href="0e207fe7-b6ad-9280-689f-779ab5678885.htm">Header</a> enum.</p><p> - or -</p><p><span class="parameter">header</span> is a combination of <a href="0e207fe7-b6ad-9280-689f-779ab5678885.htm">Header</a> values.</p></td></tr><tr><td><a href="https://learn.microsoft.com/dotnet/api/system.argumentexception" target="_blank" rel="noopener noreferrer">ArgumentException</a></td><td><span class="parameter">filePath</span> is not a valid
            file path.</td></tr><tr><td><a href="https://learn.microsoft.com/dotnet/api/system.io.ioexception" target="_blank" rel="noopener noreferrer">IOException</a></td><td>I/O error.</td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>See Also</h2><div id="seeAlsoSection"><h4>Reference</h4><div><a href="287b6348-e9e6-49e6-b15a-5ecc0d44fcb8.htm">Csv Class</a></div><div><a href="6fb8ee98-40ba-fd2d-5684-d21f3ef90dce.htm">FolkerKinzel.CsvTools Namespace</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Definition</a><ul class="menu"><li><a class="quickLink">Parameters</a></li><li><a class="quickLink">Return Value</a></li></ul></li><li><a class="quickLink">Remarks</a></li><li><a class="quickLink">Example</a></li><li><a class="quickLink">Exceptions</a></li><li><a class="quickLink">See Also</a></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div id="FooterContent" class="column"><p>Copyright © 2020 Folker Kinzel</p> 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
hljs.highlightAll();
});</script></body></html>