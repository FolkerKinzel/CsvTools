[*.cs]

# IDE0078: Musterabgleich verwenden
csharp_style_prefer_pattern_matching = true:silent

# IDE0046: In bedingten Ausdruck konvertieren
 dotnet_diagnostic.IDE0046.severity = silent




[CsvRecord.cs]

# IDE0022: Ausdruckskörper für Methoden verwenden
csharp_style_expression_bodied_methods = when_on_single_line:silent

[InvalidCsvException.cs]

# IDE0079: Unnötige Unterdrückung entfernen
dotnet_diagnostic.IDE0079.severity = none


[CsvRecordWrapper.cs]

# IDE0079: Unnötige Unterdrückung entfernen
dotnet_diagnostic.IDE0079.severity = none

[*.cs]
#### Naming styles ####

# Naming rules

dotnet_naming_rule.private_or_interrnal_constants_should_be_upper_case.severity = suggestion
dotnet_naming_rule.private_or_interrnal_constants_should_be_upper_case.symbols = private_or_interrnal_constants
dotnet_naming_rule.private_or_interrnal_constants_should_be_upper_case.style = upper_case

dotnet_naming_rule.private_or_internal_field_should_be_underscore.severity = suggestion
dotnet_naming_rule.private_or_internal_field_should_be_underscore.symbols = private_or_internal_field
dotnet_naming_rule.private_or_internal_field_should_be_underscore.style = underscore

dotnet_naming_rule.private_or_internal_static_field_should_be_underscore.severity = suggestion
dotnet_naming_rule.private_or_internal_static_field_should_be_underscore.symbols = private_or_internal_static_field
dotnet_naming_rule.private_or_internal_static_field_should_be_underscore.style = underscore

# Symbol specifications

dotnet_naming_symbols.private_or_interrnal_constants.applicable_kinds = field
dotnet_naming_symbols.private_or_interrnal_constants.applicable_accessibilities = internal, private, private_protected
dotnet_naming_symbols.private_or_interrnal_constants.required_modifiers = const

dotnet_naming_symbols.private_or_internal_field.applicable_kinds = field
dotnet_naming_symbols.private_or_internal_field.applicable_accessibilities = internal, private, private_protected
dotnet_naming_symbols.private_or_internal_field.required_modifiers = 

dotnet_naming_symbols.private_or_internal_static_field.applicable_kinds = field
dotnet_naming_symbols.private_or_internal_static_field.applicable_accessibilities = internal, private, private_protected
dotnet_naming_symbols.private_or_internal_static_field.required_modifiers = static

# Naming styles

dotnet_naming_style.upper_case.required_prefix = 
dotnet_naming_style.upper_case.required_suffix = 
dotnet_naming_style.upper_case.word_separator = _
dotnet_naming_style.upper_case.capitalization = all_upper

dotnet_naming_style.underscore.required_prefix = _
dotnet_naming_style.underscore.required_suffix = 
dotnet_naming_style.underscore.word_separator = 
dotnet_naming_style.underscore.capitalization = camel_case

dotnet_naming_style.underscore.required_prefix = _
dotnet_naming_style.underscore.required_suffix = 
dotnet_naming_style.underscore.word_separator = 
dotnet_naming_style.underscore.capitalization = camel_case
csharp_indent_labels = flush_left
csharp_using_directive_placement = outside_namespace:silent
csharp_prefer_simple_using_statement = true:suggestion
csharp_prefer_braces = true:suggestion
csharp_style_namespace_declarations = file_scoped:silent
csharp_style_prefer_method_group_conversion = true:silent
csharp_style_prefer_top_level_statements = true:silent
csharp_style_prefer_primary_constructors = true:suggestion
csharp_prefer_system_threading_lock = true:suggestion
csharp_style_expression_bodied_methods = when_on_single_line:suggestion
csharp_style_expression_bodied_constructors = when_on_single_line:suggestion
csharp_style_expression_bodied_operators = when_on_single_line:suggestion
csharp_style_expression_bodied_properties = when_on_single_line:suggestion
csharp_style_expression_bodied_indexers = when_on_single_line:suggestion
csharp_style_expression_bodied_accessors = when_on_single_line:suggestion
csharp_style_expression_bodied_lambdas = true:suggestion

# IDE0057: Use range operator
csharp_style_prefer_range_operator = false

# IDE0008: Use explicit type
csharp_style_var_for_built_in_types = false

# IDE0008: Use explicit type
csharp_style_var_when_type_is_apparent = false
csharp_style_expression_bodied_local_functions = false:silent

[*.{cs,vb}]
#### Naming styles ####

# Naming rules

dotnet_naming_rule.interface_should_be_begins_with_i.severity = suggestion
dotnet_naming_rule.interface_should_be_begins_with_i.symbols = interface
dotnet_naming_rule.interface_should_be_begins_with_i.style = begins_with_i

dotnet_naming_rule.types_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.types_should_be_pascal_case.symbols = types
dotnet_naming_rule.types_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.non_field_members_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.non_field_members_should_be_pascal_case.symbols = non_field_members
dotnet_naming_rule.non_field_members_should_be_pascal_case.style = pascal_case

# Symbol specifications

dotnet_naming_symbols.interface.applicable_kinds = interface
dotnet_naming_symbols.interface.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.interface.required_modifiers = 

dotnet_naming_symbols.types.applicable_kinds = class, struct, interface, enum
dotnet_naming_symbols.types.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.types.required_modifiers = 

dotnet_naming_symbols.non_field_members.applicable_kinds = property, event, method
dotnet_naming_symbols.non_field_members.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.non_field_members.required_modifiers = 

# Naming styles

dotnet_naming_style.begins_with_i.required_prefix = I
dotnet_naming_style.begins_with_i.required_suffix = 
dotnet_naming_style.begins_with_i.word_separator = 
dotnet_naming_style.begins_with_i.capitalization = pascal_case

dotnet_naming_style.pascal_case.required_prefix = 
dotnet_naming_style.pascal_case.required_suffix = 
dotnet_naming_style.pascal_case.word_separator = 
dotnet_naming_style.pascal_case.capitalization = pascal_case

dotnet_naming_style.pascal_case.required_prefix = 
dotnet_naming_style.pascal_case.required_suffix = 
dotnet_naming_style.pascal_case.word_separator = 
dotnet_naming_style.pascal_case.capitalization = pascal_case
dotnet_style_operator_placement_when_wrapping = beginning_of_line
tab_width = 4
indent_size = 4
end_of_line = crlf
dotnet_style_coalesce_expression = true:suggestion
dotnet_style_null_propagation = true:suggestion
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:suggestion
dotnet_style_prefer_auto_properties = true:silent
dotnet_style_object_initializer = true:suggestion
dotnet_style_collection_initializer = true:suggestion
dotnet_style_prefer_simplified_boolean_expressions = true:suggestion
dotnet_style_prefer_conditional_expression_over_assignment = true:suggestion
dotnet_style_prefer_conditional_expression_over_return = true:suggestion
dotnet_style_explicit_tuple_names = true:suggestion
dotnet_style_prefer_inferred_tuple_names = true:suggestion
dotnet_style_prefer_inferred_anonymous_type_member_names = true:suggestion
dotnet_style_prefer_compound_assignment = true:suggestion
dotnet_style_prefer_simplified_interpolation = true:suggestion
dotnet_style_prefer_collection_expression = when_types_loosely_match:suggestion
