<?xml version="1.0" encoding="utf-8"?>
<Tsltn Version="1.0" SourceFile="..\bin\Release\net40\de\FolkerKinzel.CsvTools.xml" SourceLanguage="de" TargetLanguage="en">
  <T ID="DBC1FBE0460C8E94">Named constants to specify options for reading and writing CSV files. The flags can be combined.</T>
  <T ID="9F247E3BD9FEE2F2">Provides read-only forward access to the records of a CSV file. (This means, that the &lt;see cref="T:FolkerKinzel.CsvTools.CsvReader" /&gt; can only read the file forward once.)</T>
  <T ID="8A33921DD001915A">Represents a record of the CSV file (row). The column order corresponds to that of the CSV file and all columns are of the data type &lt;see cref="T:System.String" /&gt;. The content of the columns can be accessed using a zero-based column index or the column name.</T>
  <T ID="BFEB3128DB7F4C5D">Writes data to a CSV file.</T>
  <T ID="994FACF04819064">Extension methods, that make working with the &lt;see cref="T:FolkerKinzel.CsvTools.CsvOptions" /&gt;-enum easier.</T>
  <T ID="D61CD91808A7EB58">Static class, that publishes methods to instantiate &lt;see cref="T:FolkerKinzel.CsvTools.Helpers.Converters.ICsvTypeConverter" /&gt; objects for all elementary data types.</T>
  <T ID="9B731DCCE9FE6282">Defines an interface for converting a &lt;see cref="T:System.String" /&gt; object into another data type and back. Objects, that implement the interface, are required by the class &lt;see cref="T:FolkerKinzel.CsvTools.Helpers.CsvProperty" /&gt;.</T>
  <T ID="99DCFE5E04C954AD">Implements the interface &lt;see cref="T:FolkerKinzel.CsvTools.Helpers.Converters.ICsvTypeConverter" /&gt; for the conversion of the &lt;see cref="T:System.DateTime" /&gt; data type.</T>
  <T ID="CB6840FA41EEF4D7">Implements the interface &lt;see cref="T:FolkerKinzel.CsvTools.Helpers.Converters.ICsvTypeConverter" /&gt; for the conversion of the &lt;see cref="T:System.DateTimeOffset" /&gt; data type.</T>
  <T ID="5509524449B6F322">Implements the interface &lt;see cref="T:FolkerKinzel.CsvTools.Helpers.Converters.ICsvTypeConverter" /&gt; for the conversion of the &lt;see cref="T:System.Guid" /&gt; data type.</T>
  <T ID="1622738D817D61C2">Implements the interface &lt;see cref="T:FolkerKinzel.CsvTools.Helpers.Converters.ICsvTypeConverter" /&gt; for the conversion of the &lt;see cref="T:System.TimeSpan" /&gt; data type.</T>
  <T ID="DCA391D76E0CF6EA">&lt;see cref="T:FolkerKinzel.CsvTools.Helpers.CsvAnalyzer" /&gt; can perform a statistical analysis on a CSV file and make the results available as object properties.</T>
  <T ID="A3B73B328B54DE84">Represents a property that &lt;see cref="T:FolkerKinzel.CsvTools.Helpers.CsvRecordWrapper" /&gt; implements dynamically at runtime ("late binding"). &lt;see cref="T:FolkerKinzel.CsvTools.Helpers.CsvProperty" /&gt; encapsulates information about access and type conversion that &lt;see cref="T:FolkerKinzel.CsvTools.Helpers.CsvRecordWrapper" /&gt; needs to access the data of the underlying &lt;see cref="T:FolkerKinzel.CsvTools.CsvRecord" /&gt; object.</T>
  <T ID="E07F0BFD4C5B87C8">The class forms a wrapper around objects of the class &lt;see cref="T:FolkerKinzel.CsvTools.CsvRecord" /&gt;, which enables you, to index the data of the &lt;see cref="T:FolkerKinzel.CsvTools.CsvRecord" /&gt; object in a sequence of your choice, access the data with properties dynamically implemented at runtime, and perform type conversions. In order to be able to use the dynamically implemented properties of the class &lt;see cref="T:FolkerKinzel.CsvTools.Helpers.CsvRecordWrapper" /&gt; ("late binding") directly and to assign the return values of the indexers without a cast, the instance must be assigned to a variable that is declared with the keyword &lt;c&gt;dynamic&lt;/c&gt;.</T>
  <T ID="91571A2A2C5C243">Exception, thrown parsing invalid CSV documents.</T>
  <T ID="4C84B8F95C3C56C4">&lt;note type ="tip"&gt;
             To work safely and conveniently with the &lt;see cref ="T:FolkerKinzel.CsvTools.CsvOptions"/&gt; enum, use the extension methods of the
             class &lt;see cref ="T:FolkerKinzel.CsvTools.Extensions.CsvOptionsExtension"/&gt; (see example)!
             &lt;/note&gt;</T>
  <T ID="8467B11814889718">&lt;para&gt; Example, that demonstrates, that setting the flag &lt;see cref ="F:FolkerKinzel.CsvTools.CsvOptions.DisableCaching"/&gt; can lead to unexpected results, when an attempt is made to cache the result set. &lt;/para&gt; &lt;note type ="important"&gt; In the following code example - for easier readability - exception handling was dispensed. &lt;/note&gt; &lt;code/&gt;</T>
  <T ID="4154520EEA7E1B42">No flag is set. This creates a very lenient parser, that rarely throws exceptions.</T>
  <T ID="ACBB925AD98AA35">If set, &lt;see cref ="T:FolkerKinzel.CsvTools.CsvReader"/&gt; throws an &lt;see cref ="T:FolkerKinzel.CsvTools.InvalidCsvException"/&gt;, if a data row contains more 
             fields than the first data row.
             &lt;note&gt;
             If a data row has more
             Fields than the first data row, this is a strong indication of a read error. The flag should therefore usually be set.
             &lt;/note&gt;</T>
  <T ID="DDC20687EE8B9E3E">If set, &lt;see cref ="T:FolkerKinzel.CsvTools.CsvReader"/&gt; throws an &lt;see cref ="T:FolkerKinzel.CsvTools.InvalidCsvException"/&gt;, if a data row has less fields  than the first data row.
             &lt;note&gt;
             Other software could dispense with marking empty fields at the end of a row with field separators. On the other hand, the missing
             of fields at the end of a row could be an indication of a read error.
             &lt;/note&gt;</T>
  <T ID="51D701AFCD12677">If set, &lt;see cref ="T:FolkerKinzel.CsvTools.CsvReader"/&gt; throws an &lt;see cref ="T:FolkerKinzel.CsvTools.InvalidCsvException"/&gt;, if there are blank lines in the CSV file,
              that are not part of a data field masked with quotes.
             &lt;note&gt;
             Blank lines, that are not part of a masked field, can in no case be interpreted as part of the data to be read. However, by removing the flag, &lt;see cref ="T:FolkerKinzel.CsvTools.CsvReader"/&gt; ignores such blank lines.
             &lt;/note&gt;</T>
  <T ID="A12B43CAF2A7B0B2">If the flag is not set, the class &lt;see cref ="T:FolkerKinzel.CsvTools.CsvRecord"/&gt; interpretes the column names of the CSV file in a case-insensitive manner. This is the same behavior, that &lt;see cref ="T:System.Data.DataColumnCollection"/&gt; shows.</T>
  <T ID="EF1B9D70D36EA84B">If the flag is set, &lt;see cref ="T:FolkerKinzel.CsvTools.CsvReader"/&gt; and &lt;see cref ="T:FolkerKinzel.CsvTools.CsvWriter"/&gt; will handle all data tokens and the
             column names with the &lt;see cref ="M:System.String.Trim"/&gt; method. That leads to a strong loss of performance and also can damage data, where the leading and trailing white space has a meaning. Only set the flag for reading non-standard CSV files, that introduce additional padding.</T>
  <T ID="98C887F8DBEBBAC6">Default setting. This is a combined value, that forces &lt;see cref ="T:FolkerKinzel.CsvTools.CsvReader"/&gt; to throw an &lt;see cref ="T:FolkerKinzel.CsvTools.InvalidCsvException"/&gt;,
             if the file to be read does not comply with the RFC 4180 standard. (Alternative column separators and newline characters are always tolerated.)</T>
  <T ID="F129A0C6E3C185CC">If the flag is set, the same &lt;see cref ="T:FolkerKinzel.CsvTools.CsvRecord"/&gt; object is used for each data row, when reading the CSV file (filled with new data).
             That brings slight performance advantages, when parsing very large CSV files, but can lead to unexpected results, if an attempt is made to cache the results. (see example)</T>
  <T ID="B994D74DA1D1FA2B">&lt;note type ="important"&gt; In the following code examples - for easier readability - exception handling has been omitted. &lt;/note&gt; 
&lt;para&gt; Linq query on a CSV file: &lt;/para&gt;
 &lt;code/&gt;
 &lt;para&gt; Saving the content of a &lt;see cref ="T:System.Data.DataTable"/&gt; as a CSV file and reading data from a CSV file into
             a &lt;see cref ="T:System.Data.DataTable"/&gt;: &lt;/para&gt;
 &lt;code/&gt;
 &lt;para&gt; Deserializing objects from CSV files: &lt;/para&gt;
 &lt;code/&gt;</T>
  <T ID="F0AD03D42085E980">File path of the CSV file.</T>
  <T ID="A3FB7BD4AA789A2A">&lt;c&gt;true&lt;/c&gt;, if the CSV file has a header with column names.</T>
  <T ID="D2BA8826D243D778">Options for reading the CSV file.</T>
  <T ID="3E5C13EE3827154F">The field separator char used in the CSV file.</T>
  <T ID="D0CA1C974125C9C0">The text encoding to be used to read the CSV file or &lt;c&gt;null&lt;/c&gt; for &lt;see cref ="P:System.Text.Encoding.UTF8"/&gt;.</T>
  <T ID="370A59E3C46C7EAE">&lt;paramref name ="fileName"/&gt; is &lt;c&gt;null&lt;/c&gt;.</T>
  <T ID="8426656E32DE2369">&lt;paramref name ="fileName"/&gt; is not a valid file path.</T>
  <T ID="C64F830F0CE1DF3E">The data cannot be accessed.</T>
  <T ID="BE6FBB9438BA8B0B">The &lt;see cref ="T:System.IO.TextReader"/&gt; with which the CSV file is read.</T>
  <T ID="2D844AACAA789A2A">&lt;c&gt;true&lt;/c&gt;, if the CSV file has a header with column names.</T>
  <T ID="1E157DCED243D778">Options for reading the CSV file.</T>
  <T ID="695FC4126993433C">The field separator char used in the CSV file.</T>
  <T ID="AAE7A7953E269FDE">&lt;paramref name ="reader"/&gt; is &lt;c&gt;null&lt;/c&gt;.</T>
  <T ID="47DC4E1AA5F8BDC2">Returns a &lt;see cref ="T:System.Collections.Generic.IEnumerable`1"&gt;IEnumerable&amp;lt;CsvRecord&amp;gt;&lt;/see&gt; object to iterate over the rows of the CSV file.</T>
  <T ID="2B8C7AE3B67A22B9">An &lt;see cref ="T:System.Collections.Generic.IEnumerable`1"&gt;IEnumerable&amp;lt;CsvRecord&amp;gt;&lt;/see&gt;, that can be used to iterate over the rows of the CSV file.</T>
  <T ID="C483D730EE942494">The method was called more than once.</T>
  <T ID="D60798DDF6D6FFEC">The &lt;see cref ="T:System.IO.Stream"/&gt; was already closed.</T>
  <T ID="3A6405E7DF026B62">Error accessing the disk.</T>
  <T ID="56D3B0C6603B9FA4">Invalid CSV file. The interpretation depends on the &lt;see cref ="T:FolkerKinzel.CsvTools.CsvOptions"/&gt; value,
             specified in the constructor.</T>
  <T ID="94432F8E50CC4D64">Releases the resources. (Closes the &lt;see cref ="T:System.IO.TextReader"/&gt;.)</T>
  <T ID="72C31A01F67BF66">&lt;para&gt; The &lt;see cref ="T:FolkerKinzel.CsvTools.Helpers.CsvRecordWrapper"/&gt; class maps the the order of the data columns of the &lt;see cref ="T:FolkerKinzel.CsvTools.CsvRecord"/&gt; objects at runtime to the column order of a &lt;see cref ="T:System.Data.DataTable"/&gt; and performs type conversions.
            &lt;/para&gt;</T>
  <T ID="158293CDA1F83E99">Gets or sets the value of the column in the CSV file that is at the specified index.</T>
  <T ID="7E779B496DDE25C8">The zero-based index of the column in the CSV file whose value is being obtained or set.</T>
  <T ID="7DB08370ADCADCE8">The item at the specified index.</T>
  <T ID="5F376FC73B7FF280">&lt;paramref name ="index"/&gt; is less than 0 or greater than or equal to &lt;see cref ="P:FolkerKinzel.CsvTools.CsvRecord.Count"/&gt;.</T>
  <T ID="11F546CBA46260F6">Gets or sets the value associated with the specified column name in the CSV file.</T>
  <T ID="117DF72DA798DFC1">The column name of the CSV file.</T>
  <T ID="3C6CE6C058F24F0A">The value associated with the specified column name.</T>
  <T ID="72DDA9717B8EAEF0">The column name specified with &lt;paramref name="columnName"/&gt; does not exist.</T>
  <T ID="61135BD720C7834">&lt;paramref name="columnName"/&gt; is &lt;c&gt;null&lt;/c&gt;.</T>
  <T ID="C45594ACF52C8C3F">Returns the number of columns in &lt;see cref ="T:FolkerKinzel.CsvTools.CsvRecord"/&gt;.</T>
  <T ID="D3F3E200554B51FD">Returns &lt;c&gt;true&lt;/c&gt; if &lt;see cref ="P:FolkerKinzel.CsvTools.CsvRecord.Count"/&gt; is 0 or all
             fields have the value &lt;c&gt;null&lt;/c&gt;.</T>
  <T ID="827F008317391C3F">Returns the column names.</T>
  <T ID="2C903C69A9408DD9">Returns the &lt;see cref ="T:System.String"/&gt; collection of the data stored in &lt;see cref ="T:FolkerKinzel.CsvTools.CsvRecord"/&gt;. The
             Values can be changed.</T>
  <T ID="61B598618B6451C1">Returns a copy of the data stored in &lt;see cref="T:FolkerKinzel.CsvTools.CsvRecord"/&gt; as &lt;see cref="T:System.Collections.Generic.Dictionary`2"&gt;Dictionary&amp;lt;string, string?&amp;gt;&lt;/see&gt;.
The dictionary uses the same &lt;see cref ="T:System.StringComparer"/&gt; for the key comparison with which &lt;see cref ="T:FolkerKinzel.CsvTools.CsvRecord"/&gt; was created.</T>
  <T ID="350E407EDE8BFBF5">A copy of the data stored in &lt;see cref ="T:FolkerKinzel.CsvTools.CsvRecord"/&gt; as &lt;see cref ="T:System.Collections.Generic.Dictionary`2"&gt;Dictionary&amp;lt;string, string?&amp;gt;&lt;/see&gt;.</T>
  <T ID="2155D2BC814062AC"></T>
  <T ID="42C28F72CACACC11">Sets all data fields of &lt;see cref="T:FolkerKinzel.CsvTools.CsvRecord"/&gt; to &lt;c&gt;null&lt;/c&gt;.</T>
  <T ID="D241E7C6AFC53FE2">Gets the value associated with the specified column name in the CSV file.</T>
  <T ID="E56854B8BE6C9815">The column name in the CSV file, whose value is being obtained.</T>
  <T ID="969E7A6154504913">After the method has finished, the argument contains the value associated with the column name specified with &lt;paramref name ="columnName"/&gt; if the key was found, or &lt;c&gt;null&lt;/c&gt; otherwise. The parameter is
             passed uninitialized.</T>
  <T ID="F122CA3FEC8B4854">&lt;c&gt;true&lt;/c&gt; if it contains a column name with the value of &lt;paramref name="columnName"/&gt;.</T>
  <T ID="9BA84408720C7834">&lt;paramref name ="columnName"/&gt; is &lt;c&gt;null&lt;/c&gt;.</T>
  <T ID="4CB549AEACF1A5DE">Fills &lt;see cref ="T:FolkerKinzel.CsvTools.CsvRecord"/&gt; with the contents of a &lt;see cref ="T:System.String"/&gt; collection.</T>
  <T ID="F58AA896E7084B5E">A &lt;see cref ="T:System.String"/&gt; collection.</T>
  <T ID="9F5F53C2250AA28E">&lt;paramref name ="data"/&gt; is &lt;c&gt;null&lt;/c&gt;.</T>
  <T ID="214125C7B4EF5A88">&lt;paramref name ="data"/&gt; contains more entries
             than &lt;see cref ="P:FolkerKinzel.CsvTools.CsvRecord.Count"/&gt;.</T>
  <T ID="55E5A607997275AF">If &lt;paramref name ="data"/&gt; has fewer entries than &lt;see cref ="P:FolkerKinzel.CsvTools.CsvRecord.Count"/&gt;,
             the remaining fields of &lt;see cref ="T:FolkerKinzel.CsvTools.CsvRecord"/&gt; are filled with &lt;c&gt;null&lt;/c&gt; values.</T>
  <T ID="7909C7D5634869CD">Determines whether the &lt;see cref ="T:FolkerKinzel.CsvTools.CsvRecord"/&gt; object contains a column with the specified column name.</T>
  <T ID="8EEBA74AC7E083C2">The column name of the CSV file column to search for.</T>
  <T ID="3F58B17A37C2C98B">&lt;c&gt;true&lt;/c&gt; if &lt;paramref name ="columnName"/&gt; is one of the column names of the &lt;see cref ="T:FolkerKinzel.CsvTools.CsvRecord"/&gt; object.</T>
  <T ID="81CEB13E720C7834">&lt;paramref name ="columnName"/&gt; is &lt;c&gt;null&lt;/c&gt;.</T>
  <T ID="9989C5451CEE976">Returns the zero-based index of the column in the CSV file, that has the specified column name,
             or -1, if &lt;paramref name ="columnName"/&gt; is not one of the column names in the CSV file.</T>
  <T ID="FCA99DBFB5505FF9">The column name to be checked for the index of &lt;see cref ="T:FolkerKinzel.CsvTools.CsvRecord"/&gt; that it refers to.</T>
  <T ID="D45FC46333BEBEFE">The zero-based index of the column in the CSV file with the column name &lt;paramref name ="columnName"/&gt;
             or -1, if &lt;paramref name ="columnName"/&gt; is not one of the column names in the CSV file.</T>
  <T ID="483CA41BA6559CEF">Returns an &lt;see cref ="T:System.Collections.IEnumerator"/&gt; to iterate over the &lt;see cref ="T:FolkerKinzel.CsvTools.CsvRecord"/&gt; object.</T>
  <T ID="C6566EF0EEFAE681">An &lt;see cref="T:System.Collections.IEnumerator"/&gt;.</T>
  <T ID="D1D0ECC754C6970E">An &lt;see cref="T:System.Collections.Generic.IEnumerator`1"&gt;IEnumerator&amp;lt;KeyValuePair&amp;lt;string, string?&amp;gt;&amp;gt;&lt;/see&gt;.</T>
  <T ID="29102C1CB6A0332E">Creates a &lt;see cref ="T:System.String"/&gt; representation of the &lt;see cref ="T:FolkerKinzel.CsvTools.CsvRecord"/&gt; object. (Nice for debugging.)</T>
  <T ID="BBE03871020DDE14">A &lt;see cref ="T:System.String"/&gt; representation of the &lt;see cref ="T:FolkerKinzel.CsvTools.CsvRecord"/&gt; object.</T>
  <T ID="5BDB16F861B5FE65">&lt;para&gt;
            The method &lt;see cref ="M:FolkerKinzel.CsvTools.CsvReader.Read"/&gt; returns an &lt;see cref="T:System.Collections.Generic.IEnumerator`1"&gt;IEnumerator&amp;lt;CsvRecord&amp;gt;&lt;/see&gt;  that can be used to iterate over the data records of the CSV file as &lt;see cref ="T:FolkerKinzel.CsvTools.CsvRecord"/&gt; objects.
            &lt;/para&gt; 
&lt;para&gt; The &lt;see cref ="T:FolkerKinzel.CsvTools.Helpers.CsvRecordWrapper"/&gt; class maps the the order of the data columns of the &lt;see cref ="T:FolkerKinzel.CsvTools.CsvRecord"/&gt; objects at runtime to the column order of a &lt;see cref ="T:System.Data.DataTable"/&gt; and performs type conversions.
            &lt;/para&gt;
 &lt;para&gt; When reading an unknown CSV file, the appropriate parameters for the constructor of &lt;see cref ="T:FolkerKinzel.CsvTools.CsvReader"/&gt; can be found automatically with the help of the &lt;see cref ="T:FolkerKinzel.CsvTools.Helpers.CsvAnalyzer"/&gt;. &lt;/para&gt;</T>
  <T ID="227C023C91635856">Initializes a &lt;see cref ="T:FolkerKinzel.CsvTools.CsvReader"/&gt; object.</T>
  <T ID="B001C82391635856">Initializes a &lt;see cref ="T:FolkerKinzel.CsvTools.CsvReader"/&gt; object.</T>
  <T ID="D24DF236F5776046"></T>
  <T ID="8CF2FCD62E94E715"></T>
  <T ID="7E9133B94125C9C0"></T>
  <T ID="A0EA234B1CDCDE94"></T>
  <T ID="C154BCBCC46C7EAE"></T>
  <T ID="EE14C1C732DE2369"></T>
  <T ID="EAD2674D0CE1DF3E"></T>
  <T ID="479BFF89CF7EFD36"></T>
  <T ID="86142EBCC34784A9"></T>
  <T ID="6E08518C21556F53"></T>
  <T ID="F4C5144A8157EB80"></T>
  <T ID="C2D851DE4D838ED8"></T>
  <T ID="60C16D130F922D2A"></T>
  <T ID="A4693A39B9036BD5"></T>
  <T ID="A4D579E914CD6E5F"></T>
  <T ID="3E72E6B24D838ED8"></T>
  <T ID="7A694BE464023603"></T>
  <T ID="6DE32DF80F922D2A"></T>
  <T ID="660B1360B060E788"></T>
  <T ID="B45173067CD500D1"></T>
  <T ID="634A13C3F9A41974"></T>
  <T ID="9253F2EA92F1AC68">Returns an &lt;see cref="T:System.Collections.Generic.IEnumerator`1"&gt;IEnumerator&amp;lt;KeyValuePair&amp;lt;string, string?&amp;gt;&amp;gt;&lt;/see&gt; to iterate over the
             &lt;see cref ="T:FolkerKinzel.CsvTools.CsvRecord"/&gt; object. The &lt;see cref="T:System.Collections.Generic.KeyValuePair`2"&gt;KeyValuePair&amp;lt;string, string?&amp;gt;&lt;/see&gt;  contains
             the column name as &lt;see cref ="P:System.Collections.Generic.KeyValuePair`2.Key"/&gt; and the content of the column as &lt;see cref ="P:System.Collections.Generic.KeyValuePair`2.Value"/&gt;.</T>
  <T ID="27430BA1C08A80A8">&lt;see cref ="T:FolkerKinzel.CsvTools.CsvWriter"/&gt; provides in the property &lt;see cref ="P:FolkerKinzel.CsvTools.CsvWriter.Record"/&gt; a &lt;see cref ="T:FolkerKinzel.CsvTools.CsvRecord"/&gt; object, that represents a buffer for a data record (row) of the CSV file. Fill the &lt;see cref ="T:FolkerKinzel.CsvTools.CsvRecord"/&gt; object with &lt;see cref ="T:System.String"/&gt; - data and write it to the CSV file using the &lt;see cref ="M:FolkerKinzel.CsvTools.CsvWriter.WriteRecord"/&gt; method. The &lt;see cref ="M:FolkerKinzel.CsvTools.CsvWriter.WriteRecord"/&gt; method sets all fields from
            &lt;see cref ="P:FolkerKinzel.CsvTools.CsvWriter.Record"/&gt; back to &lt;c&gt;null&lt;/c&gt; values, when it returns, ​​so that the &lt;see cref ="T:FolkerKinzel.CsvTools.CsvRecord"/&gt; object can be filled again. If data types other than &lt;see cref ="T:System.String"/&gt;
            are to be written, the use of the class &lt;see cref ="T:FolkerKinzel.CsvTools.Helpers.CsvRecordWrapper"/&gt; offers a convenient adapter between the data of the application and the CSV file.</T>
  <T ID="868199AA2EE0429B">&lt;note type ="important"&gt; In the following code examples - for easier readability - exception handling has been omitted. &lt;/note&gt; &lt;para&gt; Saving the contents of a &lt;see cref ="T:System.Data.DataTable"/&gt; as a CSV file and importing data from a CSV file into
             a &lt;see cref ="T:System.Data.DataTable"/&gt;: &lt;/para&gt; &lt;code/&gt;</T>
  <T ID="7578E296F5FA8F56">Initializes a &lt;see cref ="T:FolkerKinzel.CsvTools.CsvWriter"/&gt; object with the column names for the header row to be written.</T>
  <T ID="CF95C40923BC4110">The file path of the CSV file to be written. If the file exists, it will be overwritten.</T>
  <T ID="43571D293A0CCA9B">Options for the CSV file to be written.</T>
  <T ID="ABEFCE15AF0F0154">The text encoding to be used or &lt;c&gt;null&lt;/c&gt; for &lt;see cref ="P:System.Text.Encoding.UTF8"/&gt;.</T>
  <T ID="79B246CC9063C262">The field separator char to use in the CSV file.</T>
  <T ID="2C3771B6C46C7EAE">&lt;paramref name="fileName"/&gt; is &lt;c&gt;null&lt;/c&gt;.</T>
  <T ID="843C0A5660D83DD">&lt;para&gt; &lt;paramref name ="fileName"/&gt; is not a valid file path&lt;/para&gt; &lt;para&gt; - or - &lt;/para&gt; &lt;para&gt; a column name in &lt;paramref name ="columnNames"/&gt; occurs twice. In &lt;paramref name ="options"/&gt; you can choose, whether the comparison of column names is case-sensitive. &lt;/para&gt;</T>
  <T ID="BCE9A54B3696023E">I/O-Error.</T>
  <T ID="F503C25716193455">Initializes a &lt;see cref ="T:FolkerKinzel.CsvTools.CsvWriter"/&gt; object to write a CSV file without a header.</T>
  <T ID="52C481A423BC4110">The file path of the CSV file to be written. If the file exists, it will be overwritten.</T>
  <T ID="5E5E9832C2FE9089">Number of columns in the CSV file.</T>
  <T ID="693C198F3A0CCA9B">Options for the CSV file to be written.</T>
  <T ID="E4DDD55FA8074FCB">The text encoding to be used or &lt;c&gt;null&lt;/c&gt; for &lt;see cref ="P:System.Text.Encoding.UTF8"/&gt;.</T>
  <T ID="B6FE7E759063C262">The field separator char to use in the CSV file.</T>
  <T ID="DD1836D0C46C7EAE">&lt;paramref name="fileName"/&gt; is &lt;c&gt;null&lt;/c&gt;.</T>
  <T ID="CFD1AE5332DE2369">&lt;paramref name ="fileName"/&gt; is not a valid file path.</T>
  <T ID="8A233A533696023E">I/O-Error.</T>
  <T ID="37F7D154F5FA8F56">Initializes a &lt;see cref ="T:FolkerKinzel.CsvTools.CsvWriter"/&gt; object with the column names for the header row to be written.</T>
  <T ID="4D395FE95665038C">The &lt;see cref ="T:System.IO.TextWriter"/&gt; used for writing.</T>
  <T ID="AF64A026D601BEB6">An array of column names for the header to be written. If the array contains &lt;c&gt;null&lt;/c&gt; values, these are replaced by automatically generated column names. Column names cannot appear twice. It is to
             note that the comparison is not case-sensitive - unless this option is explicitely chosen in &lt;paramref name ="options"/&gt;.</T>
  <T ID="BACA5393D601BEB6">An array of column names for the header to be written. If the array contains &lt;c&gt;null&lt;/c&gt; values, these are replaced by automatically generated column names. Column names cannot appear twice. It is to
             note that the comparison is not case-sensitive - unless this option is explicitely chosen in &lt;paramref name ="options"/&gt;.</T>
  <T ID="EA34F5C13A0CCA9B">Options for the CSV file to be written.</T>
  <T ID="285A2DBE9063C262">The field separator char to use in the CSV file.</T>
  <T ID="F87B3299752BEC78">A column name in &lt;paramref name ="columnNames"/&gt; occurs twice. In &lt;paramref name ="options"/&gt; can be chosen, whether the comparison is case-sensitive.</T>
  <T ID="3226C6E916193455">Initializes a &lt;see cref ="T:FolkerKinzel.CsvTools.CsvWriter"/&gt; object to write a CSV file  without a header row.</T>
  <T ID="574491405665038C">The &lt;see cref ="T:System.IO.TextWriter"/&gt; used for writing.</T>
  <T ID="AF5E1077C2FE9089">Number of columns in the CSV file.</T>
  <T ID="8D3D33D3A0CCA9B">Options for the CSV file to be written.</T>
  <T ID="7EECE7549063C262">The field separator char to use in the CSV file.</T>
  <T ID="C76879E068C431FA">The record to be written to the file. Fill the &lt;see cref ="T:FolkerKinzel.CsvTools.CsvRecord"/&gt; object with data and call
             then &lt;see cref ="M:FolkerKinzel.CsvTools.CsvWriter.WriteRecord"/&gt; to write this data to the file. &lt;see cref ="T:FolkerKinzel.CsvTools.CsvWriter"/&gt; clears the contents of
             &lt;see cref ="P:FolkerKinzel.CsvTools.CsvWriter.Record"/&gt; after each call of the &lt;see cref ="M:FolkerKinzel.CsvTools.CsvWriter.WriteRecord"/&gt; method.</T>
  <T ID="F8A61B574CC420EB">Writes the content of &lt;see cref ="P:FolkerKinzel.CsvTools.CsvWriter.Record"/&gt; into the CSV file and then sets all columns of &lt;see cref ="P:FolkerKinzel.CsvTools.CsvWriter.Record"/&gt; to &lt;c&gt;null&lt;/c&gt;.
             (The header may also be written the first time it is called.)</T>
  <T ID="A5AA64C13696023E">I/O-Error</T>
  <T ID="4230EB7D954BA22D">The resources were already released.</T>
  <T ID="BC54488837F75677">Releases the resources. (Closes the &lt;see cref ="T:System.IO.TextWriter"/&gt;.)</T>
  <T ID="B7E58D393578B8E9">Sets all flags set in &lt;paramref name ="flags"/&gt; in &lt;paramref name ="value"/&gt;.</T>
  <T ID="7D0BB39E5AB6076E">The &lt;see cref ="T:FolkerKinzel.CsvTools.CsvOptions"/&gt;? Value, to which the flags set in &lt;paramref name ="flags"/&gt; are set.</T>
  <T ID="EACE890AE6B0D7C0">A single &lt;see cref ="T:FolkerKinzel.CsvTools.CsvOptions"/&gt; value or a combination of several
             &lt;see cref ="T:FolkerKinzel.CsvTools.CsvOptions"/&gt; values.</T>
  <T ID="4082D7E87C1B8D48">A &lt;see cref ="T:FolkerKinzel.CsvTools.CsvOptions"/&gt; value on which all in &lt;paramref name ="value"/&gt; and &lt;paramref name ="flags"/&gt;
             set flags are set.</T>
  <T ID="E52895516C2CAE5A">Examines whether all flags set in &lt;paramref name ="flags"/&gt; also in &lt;paramref name ="value"/&gt;
             are set.</T>
  <T ID="4916E42DA120D823">The &lt;see cref ="T:FolkerKinzel.CsvTools.CsvOptions"/&gt;? value, which is checked to see whether all flags set in &lt;paramref name ="flags"/&gt; are set on it.</T>
  <T ID="90692B2BE6B0D7C0">A single &lt;see cref ="T:FolkerKinzel.CsvTools.CsvOptions"/&gt; value or a combination of several
             &lt;see cref ="T:FolkerKinzel.CsvTools.CsvOptions"/&gt; values.</T>
  <T ID="58F8DE2ABD45FF18">&lt;c&gt;true&lt;/c&gt;, if all flags set in &lt;paramref name ="flags"/&gt; also in &lt;paramref name ="value"/&gt;
             are set. (If &lt;paramref name ="flags"/&gt; is &lt;see cref ="F:FolkerKinzel.CsvTools.CsvOptions.None"/&gt;, &lt;c&gt;true&lt;/c&gt; is only returned if
             if &lt;paramref name ="value"/&gt; is also &lt;see cref ="F:FolkerKinzel.CsvTools.CsvOptions.None"/&gt;.</T>
  <T ID="582232175226B55B">Removes all flags set in &lt;paramref name ="flags"/&gt; from &lt;paramref name ="value"/&gt;.</T>
  <T ID="4CA1E946C8089B87">The &lt;see cref ="T:FolkerKinzel.CsvTools.CsvOptions"/&gt;? value from which the flags set in &lt;paramref name ="flags"/&gt; are removed.</T>
  <T ID="C000B726E6B0D7C0">A single &lt;see cref ="T:FolkerKinzel.CsvTools.CsvOptions"/&gt; value or a combination of several
             &lt;see cref ="T:FolkerKinzel.CsvTools.CsvOptions"/&gt; values.</T>
  <T ID="768E670C04FE9E5F">A &lt;see cref ="T:FolkerKinzel.CsvTools.CsvOptions"/&gt; value on which everyone in &lt;paramref name ="flags"/&gt;
             set flags are removed.</T>
  <T ID="C003B50E1B3A2890">The newline character to use, when writing CSV files ("\r\n").</T>
  <T ID="E2D1665984B90CEF">Creates an &lt;see cref ="T:FolkerKinzel.CsvTools.Helpers.Converters.ICsvTypeConverter"/&gt; for the specified data type.</T>
  <T ID="506220A4E338DF36">The data type, that the &lt;see cref="T:FolkerKinzel.CsvTools.Helpers.Converters.ICsvTypeConverter"/&gt; converts.</T>
  <T ID="EC6A1E701F29CC6E">If &lt;c&gt;true&lt;/c&gt;, an &lt;see cref ="T:FolkerKinzel.CsvTools.Helpers.Converters.ICsvTypeConverter"/&gt; object is created, that accepts &lt;c&gt;null&lt;/c&gt; as input
             and also is able to return &lt;c&gt;null&lt;/c&gt; (&lt;see cref ="T:System.Nullable`1"/&gt;).</T>
  <T ID="70D14D62FC596047">If &lt;c&gt;true&lt;/c&gt;, &lt;see cref ="F:System.DBNull.Value"/&gt; is accepted as input and also forms the
             return value of &lt;see cref ="P:FolkerKinzel.CsvTools.Helpers.Converters.ICsvTypeConverter.FallbackValue"/&gt;.</T>
  <T ID="629BC88445E4D6A1">An &lt;see cref ="T:System.IFormatProvider"/&gt; object, that provides culture-specific formatting information, or &lt;c&gt;null&lt;/c&gt; for &lt;see cref ="P:System.Globalization.CultureInfo.InvariantCulture"/&gt;.</T>
  <T ID="D94D2F6F3FB185FB">If &lt;c&gt;true&lt;/c&gt;, the method &lt;see cref ="M:FolkerKinzel.CsvTools.Helpers.Converters.ICsvTypeConverter.Parse(System.String)"/&gt; of the generated
             &lt;see cref ="T:FolkerKinzel.CsvTools.Helpers.Converters.ICsvTypeConverter"/&gt; object throws an exception, when parsing
             fails,
             otherwise it returns &lt;see cref ="P:FolkerKinzel.CsvTools.Helpers.Converters.ICsvTypeConverter.FallbackValue"/&gt; in this case.</T>
  <T ID="286C19CE0E72816D">An &lt;see cref ="T:FolkerKinzel.CsvTools.Helpers.Converters.ICsvTypeConverter"/&gt; object to convert the desired data type.</T>
  <T ID="57267195E247B7E">&lt;paramref name ="type"/&gt; is not one of the defined values of the
             &lt;see cref ="T:FolkerKinzel.CsvTools.Helpers.Converters.CsvTypeCode"/&gt; - Enum.</T>
  <T ID="306DE623C78D800">Initializes an &lt;see cref ="T:FolkerKinzel.CsvTools.Helpers.Converters.ICsvTypeConverter"/&gt; object, that can convert an enum identifier to its number representation and can parse the enum identifier from this as well as from word representations.</T>
  <T ID="4D85F0C96EA76271">Any type of enum.</T>
  <T ID="AD2C8341F29CC6E">If &lt;c&gt;true&lt;/c&gt;, an &lt;see cref ="T:FolkerKinzel.CsvTools.Helpers.Converters.ICsvTypeConverter"/&gt; object is created, that accepts &lt;c&gt;null&lt;/c&gt; as input
             and also is able to return &lt;c&gt;null&lt;/c&gt; (&lt;see cref ="T:System.Nullable`1"/&gt;).</T>
  <T ID="DEAD8FD6FC596047">If &lt;c&gt;true&lt;/c&gt;, &lt;see cref ="F:System.DBNull.Value"/&gt; is accepted as input and also forms the
             return value of &lt;see cref ="P:FolkerKinzel.CsvTools.Helpers.Converters.ICsvTypeConverter.FallbackValue"/&gt;.</T>
  <T ID="D15DD0783FB185FB">If &lt;c&gt;true&lt;/c&gt;, the method &lt;see cref ="M:FolkerKinzel.CsvTools.Helpers.Converters.ICsvTypeConverter.Parse(System.String)"/&gt; of the generated
             &lt;see cref ="T:FolkerKinzel.CsvTools.Helpers.Converters.ICsvTypeConverter"/&gt; object throws an exception, when parsing
             fails,
             otherwise it returns &lt;see cref ="P:FolkerKinzel.CsvTools.Helpers.Converters.ICsvTypeConverter.FallbackValue"/&gt; in this case.</T>
  <T ID="368F5FF747963429">If &lt;c&gt;true&lt;/c&gt;, enum identifiers are parsed case insensitive.</T>
  <T ID="267B37C727A2807A">An &lt;see cref ="T:FolkerKinzel.CsvTools.Helpers.Converters.ICsvTypeConverter"/&gt; object for converting the enum data type &lt;typeparamref name ="TEnum"/&gt;.</T>
  <T ID="FEEF31303C78D800">Initializes an &lt;see cref ="T:FolkerKinzel.CsvTools.Helpers.Converters.ICsvTypeConverter"/&gt; object, that can convert an enum identifier to its number representation and can parse the enum identifier from this as well as from word representations.</T>
  <T ID="2C2F60446EA76271">Any type of enum.</T>
  <T ID="63BA6AD02C880191">A format string, that is used for the &lt;see cref ="T:System.String"/&gt; output of &lt;typeparamref name ="TEnum"/&gt;.</T>
  <T ID="885E507F1F29CC6E">If &lt;c&gt;true&lt;/c&gt;, an &lt;see cref ="T:FolkerKinzel.CsvTools.Helpers.Converters.ICsvTypeConverter"/&gt; object is created, that accepts &lt;c&gt;null&lt;/c&gt; as input
             and also is able to return &lt;c&gt;null&lt;/c&gt; (&lt;see cref ="T:System.Nullable`1"/&gt;).</T>
  <T ID="5603374FFC596047">If &lt;c&gt;true&lt;/c&gt;, &lt;see cref ="F:System.DBNull.Value"/&gt; is accepted as input and also forms the
             return value of &lt;see cref ="P:FolkerKinzel.CsvTools.Helpers.Converters.ICsvTypeConverter.FallbackValue"/&gt;.</T>
  <T ID="DE6530C23FB185FB">If &lt;c&gt;true&lt;/c&gt;, the method &lt;see cref ="M:FolkerKinzel.CsvTools.Helpers.Converters.ICsvTypeConverter.Parse(System.String)"/&gt; of the generated
             &lt;see cref ="T:FolkerKinzel.CsvTools.Helpers.Converters.ICsvTypeConverter"/&gt; object throws an exception, when parsing
             fails,
             otherwise it returns &lt;see cref ="P:FolkerKinzel.CsvTools.Helpers.Converters.ICsvTypeConverter.FallbackValue"/&gt; in this case.</T>
  <T ID="178AAFD927A2807A">An &lt;see cref ="T:FolkerKinzel.CsvTools.Helpers.Converters.ICsvTypeConverter"/&gt; object for converting the enum data type &lt;typeparamref name ="TEnum"/&gt;.</T>
  <T ID="AEDE9C2E47963429">If &lt;c&gt;true&lt;/c&gt;, enum identifiers are parsed case insensitive.</T>
  <T ID="117A4DC6769C0F86">&lt;paramref name ="format"/&gt; is not a valid format string for enum data types.</T>
  <T ID="F7FC73B524A4ADD1">Initializes a &lt;see cref ="T:FolkerKinzel.CsvTools.Helpers.Converters.ICsvTypeConverter"/&gt; object, that converts an integer data type to its hexadecimal representation and can parse it from that.</T>
  <T ID="E2A968B271B4B886">Constant for an integer data type.</T>
  <T ID="B3934A5C1F29CC6E">If &lt;c&gt;true&lt;/c&gt;, an &lt;see cref ="T:FolkerKinzel.CsvTools.Helpers.Converters.ICsvTypeConverter"/&gt; object is created, that accepts &lt;c&gt;null&lt;/c&gt; as input
             and also is able to return &lt;c&gt;null&lt;/c&gt; (&lt;see cref ="T:System.Nullable`1"/&gt;).</T>
  <T ID="68B631DFFC596047">If &lt;c&gt;true&lt;/c&gt;, &lt;see cref ="F:System.DBNull.Value"/&gt; is accepted as input and also forms the
             return value of &lt;see cref ="P:FolkerKinzel.CsvTools.Helpers.Converters.ICsvTypeConverter.FallbackValue"/&gt;.</T>
  <T ID="9AAE8F9E3FB185FB">If &lt;c&gt;true&lt;/c&gt;, the method &lt;see cref ="M:FolkerKinzel.CsvTools.Helpers.Converters.ICsvTypeConverter.Parse(System.String)"/&gt; of the generated
             &lt;see cref ="T:FolkerKinzel.CsvTools.Helpers.Converters.ICsvTypeConverter"/&gt; object throws an exception, when parsing
             fails,
             otherwise it returns &lt;see cref ="P:FolkerKinzel.CsvTools.Helpers.Converters.ICsvTypeConverter.FallbackValue"/&gt; in this case.</T>
  <T ID="BD45665CBC6811B2">An &lt;see cref ="T:FolkerKinzel.CsvTools.Helpers.Converters.ICsvTypeConverter"/&gt; object for converting the desired integer data type into hexadecimal representation and vice versa.</T>
  <T ID="6E6A9AEDB751890B">&lt;paramref name="type"/&gt; is not an integer data type. (Supported are the types
            &lt;see cref="F:FolkerKinzel.CsvTools.Helpers.Converters.CsvTypeCode.Byte"/&gt;, &lt;see cref="F:FolkerKinzel.CsvTools.Helpers.Converters.CsvTypeCode.UInt16"/&gt;, &lt;see cref="F:FolkerKinzel.CsvTools.Helpers.Converters.CsvTypeCode.UInt32"/&gt;, &lt;see cref="F:FolkerKinzel.CsvTools.Helpers.Converters.CsvTypeCode.UInt64"/&gt;,
            &lt;see cref="F:FolkerKinzel.CsvTools.Helpers.Converters.CsvTypeCode.SByte"/&gt;, &lt;see cref="F:FolkerKinzel.CsvTools.Helpers.Converters.CsvTypeCode.Int16"/&gt;, &lt;see cref="F:FolkerKinzel.CsvTools.Helpers.Converters.CsvTypeCode.Int32"/&gt; und &lt;see cref="F:FolkerKinzel.CsvTools.Helpers.Converters.CsvTypeCode.Int64"/&gt;.)</T>
  <T ID="8B1D6F51284DC60A">Named constants to select the type of data, that an &lt;see cref ="T:FolkerKinzel.CsvTools.Helpers.Converters.ICsvTypeConverter"/&gt; object can convert.</T>
  <T ID="56CCE14CE0608FA3">&lt;see cref="T:System.Boolean"/&gt;</T>
  <T ID="EC8372037DAF422F">&lt;see cref="T:System.Byte"/&gt;</T>
  <T ID="F36D325C9BF8F78E">&lt;see cref="T:System.SByte"/&gt;</T>
  <T ID="99514C25A4283A77">&lt;see cref="T:System.Char"/&gt;</T>
  <T ID="8D82A450DFCAD201">&lt;see cref="T:System.UInt16"/&gt;</T>
  <T ID="32F272F7A52D6161">&lt;see cref="T:System.Int16"/&gt;</T>
  <T ID="D6496AEE552CFF93">&lt;see cref="T:System.UInt32"/&gt;</T>
  <T ID="5166BB2DEA7C4A93">&lt;see cref="T:System.Int32"/&gt;</T>
  <T ID="C4041A752519BB3A">&lt;see cref="T:System.UInt64"/&gt;</T>
  <T ID="E856152CBD37038E">&lt;see cref="T:System.Int64"/&gt;</T>
  <T ID="81621B409F1432F5">&lt;see cref="F:FolkerKinzel.CsvTools.Helpers.Converters.CsvTypeCode.Guid"/&gt;</T>
  <T ID="96E615E3C8F19CA2">&lt;see cref="T:System.Single"/&gt;</T>
  <T ID="BD6E19323D94696D">&lt;see cref="T:System.Double"/&gt;</T>
  <T ID="35F90902EC7845DC">&lt;see cref="T:System.Decimal"/&gt;</T>
  <T ID="957FFB76955EE138">&lt;see cref="F:FolkerKinzel.CsvTools.Helpers.Converters.CsvTypeCode.TimeSpan"/&gt;</T>
  <T ID="2943EA0D803B21DA">&lt;see cref ="F:FolkerKinzel.CsvTools.Helpers.Converters.CsvTypeCode.DateTime"/&gt;: Only the date part is processed. (Corresponds to format string "d".)</T>
  <T ID="B9009C38CE20C45B">&lt;see cref ="F:FolkerKinzel.CsvTools.Helpers.Converters.CsvTypeCode.DateTime"/&gt;: Date and time (format string "s")</T>
  <T ID="A656B914F2689904">&lt;see cref="F:FolkerKinzel.CsvTools.Helpers.Converters.CsvTypeCode.DateTimeOffset"/&gt;</T>
  <T ID="E2AA5DD126D1DB7">&lt;see cref="T:System.String"/&gt;</T>
  <T ID="5328E0D96AB92D9A">&lt;see cref ="T:System.Byte"/&gt;-array (Base64-encoded)</T>
  <T ID="C72433D7437A44B1">With the class &lt;see cref ="T:FolkerKinzel.CsvTools.Helpers.Converters.CsvConverterFactory"/&gt; implementations for the most important data types can be instantiated. If the functional scope of the implementations of the interface available in the namespace &lt;see cref ="N:FolkerKinzel.CsvTools.Helpers.Converters"/&gt; does not meet your requirements or if you have to convert complex data types, you can easily create a class yourself which implements &lt;see cref ="T:FolkerKinzel.CsvTools.Helpers.Converters.ICsvTypeConverter"/&gt;.</T>
  <T ID="6E1229CE0BE0810F">Converts a &lt;see cref ="T:System.String"/&gt; to the data type returned by &lt;see cref ="P:FolkerKinzel.CsvTools.Helpers.Converters.ICsvTypeConverter.Type"/&gt;.</T>
  <T ID="4B155852433BBB61">The &lt;see cref ="T:System.String"/&gt; to convert or &lt;c&gt;null&lt;/c&gt;.</T>
  <T ID="476C67090D22E623">&lt;paramref name ="value"/&gt;, converted to the data type of &lt;see cref ="P:FolkerKinzel.CsvTools.Helpers.Converters.ICsvTypeConverter.Type"/&gt;.</T>
  <T ID="E9AF797A3F9523A7">Converts &lt;paramref name ="value"/&gt; to a &lt;see cref ="T:System.String"/&gt;.</T>
  <T ID="A78D6FB00D37121C">An &lt;see cref ="T:System.Object"/&gt; of any class or &lt;c&gt;null&lt;/c&gt;. The method should throw an
             &lt;see cref ="T:System.InvalidCastException"/&gt;, if the data type of &lt;paramref name ="value"/&gt; does not match the return value of
             &lt;see cref ="P:FolkerKinzel.CsvTools.Helpers.Converters.ICsvTypeConverter.Type"/&gt;.</T>
  <T ID="A9FCDFD779AF6FC8">&lt;paramref name="value"/&gt;, converted to a &lt;see cref="T:System.String"/&gt;.</T>
  <T ID="445E8C5EE691AEB7">The method should throw this exception, if the data type of
             &lt;paramref name ="value"/&gt; does not correspond to the return value of &lt;see cref ="P:FolkerKinzel.CsvTools.Helpers.Converters.ICsvTypeConverter.Type"/&gt;.</T>
  <T ID="7A37E1BE1369AA08">An object of the data type returned by &lt;see cref ="P:FolkerKinzel.CsvTools.Helpers.Converters.ICsvTypeConverter.Type"/&gt;, that is used as the return value of the
             &lt;see cref ="T:FolkerKinzel.CsvTools.Helpers.Converters.ICsvTypeConverter"/&gt; object,  if &lt;see cref ="T:FolkerKinzel.CsvTools.Helpers.CsvProperty"/&gt; finds no access target
             in the columns of the CSV file (represented by &lt;see cref ="T:FolkerKinzel.CsvTools.CsvRecord"/&gt;). &lt;see cref ="P:FolkerKinzel.CsvTools.Helpers.Converters.ICsvTypeConverter.FallbackValue"/&gt;
             should also be returned, if the type conversion in &lt;see cref ="M:FolkerKinzel.CsvTools.Helpers.Converters.ICsvTypeConverter.Parse(System.String)"/&gt; fails
             and no &lt;see cref ="T:System.Exception"/&gt; is thrown.</T>
  <T ID="FB9E0BDDFB3453F7">The data type, that &lt;see cref ="T:FolkerKinzel.CsvTools.Helpers.Converters.ICsvTypeConverter"/&gt; can parse, or that &lt;see cref ="T:FolkerKinzel.CsvTools.Helpers.Converters.ICsvTypeConverter"/&gt; can convert to a &lt;see cref ="T:System.String"/&gt;.</T>
  <T ID="F98EFDDF0C2A4485">&lt;c&gt;true&lt;/c&gt; indicates, that the &lt;see cref ="T:FolkerKinzel.CsvTools.Helpers.Converters.ICsvTypeConverter"/&gt; object throws an exception, if &lt;see cref ="M:FolkerKinzel.CsvTools.Helpers.Converters.ICsvTypeConverter.Parse(System.String)"/&gt;
             fails. Otherwise &lt;see cref ="P:FolkerKinzel.CsvTools.Helpers.Converters.ICsvTypeConverter.FallbackValue"/&gt; is returned in this case.</T>
  <T ID="94F2DACCF1C9A89">Initialises a &lt;see cref="T:FolkerKinzel.CsvTools.Helpers.Converters.Specialized.DateTimeConverter"/&gt; object.</T>
  <T ID="F4B6543D7C6A2FCF">If &lt;c&gt;true&lt;/c&gt;, only the date part is parsed and output.</T>
  <T ID="A8AEB9FC3323C9FF">If &lt;c&gt;true&lt;/c&gt;, &lt;see cref ="T:System.Nullable`1"&gt;Nullable&amp;lt; DateTime&amp;gt;&lt;/see&gt; is accepted and returned,
             otherwise &lt;see cref ="T:System.DateTime"/&gt;.</T>
  <T ID="BC083F690022525">If &lt;c&gt;true&lt;/c&gt;, &lt;see cref ="F:System.DBNull.Value"/&gt; is accepted as input and also forms the
             return value of &lt;see cref="P:FolkerKinzel.CsvTools.Helpers.Converters.Specialized.DateTimeConverter.FallbackValue"/&gt;.</T>
  <T ID="7A55398F45E4D6A1">An &lt;see cref ="T:System.IFormatProvider"/&gt; object, that provides culture-specific formatting information, or &lt;c&gt;null&lt;/c&gt; for &lt;see cref ="P:System.Globalization.CultureInfo.InvariantCulture"/&gt;.</T>
  <T ID="4CE43DABAEE7CA3A">If &lt;c&gt;true&lt;/c&gt;, the method &lt;see cref="M:FolkerKinzel.CsvTools.Helpers.Converters.Specialized.DateTimeConverter.Parse(System.String)"/&gt; throws an exception, when parsing
             fails,
             otherwise it returns &lt;see cref="P:FolkerKinzel.CsvTools.Helpers.Converters.Specialized.DateTimeConverter.FallbackValue"/&gt; in this case.</T>
  <T ID="273B4886CF1C9A89">Initialises a &lt;see cref="T:FolkerKinzel.CsvTools.Helpers.Converters.Specialized.DateTimeConverter"/&gt; object.</T>
  <T ID="F57371EFB0D45909">A format string, that is used for the &lt;see cref ="T:System.String"/&gt; output of &lt;see cref ="T:System.DateTime"/&gt; values.
             If the option &lt;paramref name ="parseExact"/&gt; is selected, this format string is also used for parsing.</T>
  <T ID="B953C6C43323C9FF">If &lt;c&gt;true&lt;/c&gt;, &lt;see cref ="T:System.Nullable`1"&gt;Nullable&amp;lt; DateTime&amp;gt;&lt;/see&gt; is accepted and returned,
             otherwise &lt;see cref ="T:System.DateTime"/&gt;.</T>
  <T ID="7806486D90022525">If &lt;c&gt;true&lt;/c&gt;, &lt;see cref ="F:System.DBNull.Value"/&gt; is accepted as input and also forms the
             return value of &lt;see cref="P:FolkerKinzel.CsvTools.Helpers.Converters.Specialized.DateTimeConverter.FallbackValue"/&gt;.</T>
  <T ID="DDC8C62445E4D6A1">An &lt;see cref ="T:System.IFormatProvider"/&gt; object, that provides culture-specific formatting information, or &lt;c&gt;null&lt;/c&gt; for &lt;see cref ="P:System.Globalization.CultureInfo.InvariantCulture"/&gt;.</T>
  <T ID="ABEE96DDAEE7CA3A">If &lt;c&gt;true&lt;/c&gt;, the method &lt;see cref="M:FolkerKinzel.CsvTools.Helpers.Converters.Specialized.DateTimeConverter.Parse(System.String)"/&gt; throws an exception, when parsing
             fails,
             otherwise it returns &lt;see cref="P:FolkerKinzel.CsvTools.Helpers.Converters.Specialized.DateTimeConverter.FallbackValue"/&gt; in this case.</T>
  <T ID="C51C43BCDFF42662">A value of the &lt;see cref ="T:System.Globalization.DateTimeStyles"/&gt; enum that provides additional information for parsing. Becomes
             only evaluated if &lt;paramref name ="parseExact"/&gt; is &lt;c&gt;true&lt;/c&gt;.</T>
  <T ID="EA9F7E48B3C75EB6">If &lt;c&gt;true&lt;/c&gt;, the text in the CSV file must exactly match the format string specified with &lt;paramref name ="format"/&gt;.</T>
  <T ID="8F9F3EF1CE3F5EAE">&lt;paramref name="format"/&gt; is &lt;c&gt;null&lt;/c&gt;.</T>
  <T ID="EF8A2F3867E65E92">&lt;paramref name="format"/&gt; is not a valid format string.</T>
  <T ID="FBE50D5BD45359DE">If no special format is required, you should initialize the &lt;see cref ="T:FolkerKinzel.CsvTools.Helpers.Converters.Specialized.DateTimeConverter"/&gt; object
             via the method &lt;see cref ="M:FolkerKinzel.CsvTools.Helpers.Converters.CsvConverterFactory.CreateConverter(FolkerKinzel.CsvTools.Helpers.Converters.CsvTypeCode,System.Boolean,System.Boolean,System.IFormatProvider)"/&gt;: This is much better for performance.</T>
  <T ID="8309548E7354BC1E">Value, that is returned, if &lt;see cref ="T:FolkerKinzel.CsvTools.Helpers.CsvProperty"/&gt; finds no data
             in the columns of the CSV file (represented by &lt;see cref ="T:FolkerKinzel.CsvTools.CsvRecord"/&gt;) or if
             &lt;see cref ="M:FolkerKinzel.CsvTools.Helpers.Converters.Specialized.DateTimeConverter.Parse(System.String)"/&gt; fails.</T>
  <T ID="DF363B6F5913D7BB">The data type, that &lt;see cref ="T:FolkerKinzel.CsvTools.Helpers.Converters.Specialized.DateTimeConverter"/&gt; can parse or
             which &lt;see cref ="T:FolkerKinzel.CsvTools.Helpers.Converters.Specialized.DateTimeConverter"/&gt; can convert to a &lt;see cref ="T:System.String"/&gt;. (&lt;c&gt;typeof (DateTime)&lt;/c&gt; or &lt;c&gt;typeof (DateTime?)&lt;/c&gt;)</T>
  <T ID="A45E1677E459FDC6">&lt;c&gt;true&lt;/c&gt; indicates, that an exception is thrown, if &lt;see cref="M:FolkerKinzel.CsvTools.Helpers.Converters.Specialized.DateTimeConverter.Parse(System.String)"/&gt;
             fails. Otherwise &lt;see cref="P:FolkerKinzel.CsvTools.Helpers.Converters.Specialized.DateTimeConverter.FallbackValue"/&gt; is returned in this case.</T>
  <T ID="C5E4B010CB056A95">Parses &lt;paramref name ="value"/&gt; as &lt;see cref ="T:System.DateTime"/&gt; or &lt;see cref ="T:System.Nullable`1"&gt;Nullable&amp;lt;DateTime&amp;gt;&lt;/see&gt; - depending on the settings in the constructor.</T>
  <T ID="F177A5297CA68363">The &lt;see cref="T:System.String"/&gt; to parse.</T>
  <T ID="4F45C2EC7E621B75">&lt;paramref name ="value"/&gt; is not in a compatible format. The exception will only be
             thrown, if it was configured in the constructor - otherwise &lt;see cref ="P:FolkerKinzel.CsvTools.Helpers.Converters.Specialized.DateTimeConverter.FallbackValue"/&gt; is returned.</T>
  <T ID="6A195DBB04BE30AD">Returns the string representation of &lt;paramref name ="value"/&gt;, if &lt;paramref name ="value"/&gt; is &lt;see cref ="T:System.DateTime"/&gt;
             or &lt;see cref ="T:System.Nullable`1"&gt;Nullable&amp;lt;DateTime&amp;gt;&lt;/see&gt;.</T>
  <T ID="862DEFE3C26BB1E9">A &lt;see cref ="T:System.DateTime"/&gt;- or &lt;see cref ="T:System.Nullable`1"&gt;Nullable&amp;lt;DateTime&amp;gt;&lt;/see&gt;-object as the result
             of parsing.</T>
  <T ID="660D865F8EBE77DE">A &lt;see cref ="T:System.DateTime"/&gt;- or &lt;see cref ="T:System.Nullable`1"&gt;Nullable&amp;lt;DateTime&amp;gt;&lt;/see&gt;-object.</T>
  <T ID="B2FF5F1E5AF8B776">A string representation of &lt;paramref name="value"/&gt;.</T>
  <T ID="226C4EFA5AEF5F">&lt;paramref name ="value"/&gt; cannot be converted in the data type &lt;see cref ="T:System.DateTime"/&gt;
             or &lt;see cref ="T:System.Nullable`1"&gt;Nullable&amp;lt;DateTime&amp;gt;&lt;/see&gt;.</T>
  <T ID="97DF871D325013F1">The date and time are outside the range of dates that
             are supported by the calendar of the &lt;see cref ="T:System.Globalization.CultureInfo"/&gt;, assigned in the constructor.</T>
  <T ID="70D14D620EBE990C">If &lt;c&gt;true&lt;/c&gt;, &lt;see cref="F:System.DBNull.Value"&gt;DBNull.Value&lt;/see&gt; is accepted as input and also forms the
             return value of &lt;see cref ="P:FolkerKinzel.CsvTools.Helpers.Converters.ICsvTypeConverter.FallbackValue"/&gt;.</T>
  <T ID="DEAD8FD60EBE990C">If &lt;c&gt;true&lt;/c&gt;, &lt;see cref="F:System.DBNull.Value"&gt;DBNull.Value&lt;/see&gt; is accepted as input and also forms the
             return value of &lt;see cref ="P:FolkerKinzel.CsvTools.Helpers.Converters.ICsvTypeConverter.FallbackValue"/&gt;.</T>
  <T ID="5603374F0EBE990C">If &lt;c&gt;true&lt;/c&gt;, &lt;see cref="F:System.DBNull.Value"&gt;DBNull.Value&lt;/see&gt; is accepted as input and also forms the
             return value of &lt;see cref ="P:FolkerKinzel.CsvTools.Helpers.Converters.ICsvTypeConverter.FallbackValue"/&gt;.</T>
  <T ID="68B631DF0EBE990C">If &lt;c&gt;true&lt;/c&gt;, &lt;see cref="F:System.DBNull.Value"&gt;DBNull.Value&lt;/see&gt; is accepted as input and also forms the
             return value of &lt;see cref ="P:FolkerKinzel.CsvTools.Helpers.Converters.ICsvTypeConverter.FallbackValue"/&gt;.</T>
  <T ID="DC4BB26C9782CB08">If &lt;c&gt;true&lt;/c&gt;, &lt;see cref="F:System.DBNull.Value"&gt;DBNull.Value&lt;/see&gt; is accepted as input and also forms the
             return value of &lt;see cref="P:FolkerKinzel.CsvTools.Helpers.Converters.Intls.EnumConverter`1.FallbackValue"/&gt;.</T>
  <T ID="5B189C8E9782CB08">If &lt;c&gt;true&lt;/c&gt;, &lt;see cref="F:System.DBNull.Value"&gt;DBNull.Value&lt;/see&gt; is accepted as input and also forms the
             return value of &lt;see cref="P:FolkerKinzel.CsvTools.Helpers.Converters.Intls.EnumConverter`1.FallbackValue"/&gt;.</T>
  <T ID="BC083F6E8BDEC4D">If &lt;c&gt;true&lt;/c&gt;, &lt;see cref="F:System.DBNull.Value"&gt;DBNull.Value&lt;/see&gt; is accepted as input and also forms the
             return value of &lt;see cref="P:FolkerKinzel.CsvTools.Helpers.Converters.Specialized.DateTimeConverter.FallbackValue"/&gt;.</T>
  <T ID="7806486DE8BDEC4D">If &lt;c&gt;true&lt;/c&gt;, &lt;see cref="F:System.DBNull.Value"&gt;DBNull.Value&lt;/see&gt; is accepted as input and also forms the
             return value of &lt;see cref="P:FolkerKinzel.CsvTools.Helpers.Converters.Specialized.DateTimeConverter.FallbackValue"/&gt;.</T>
  <T ID="26FF0D46C534B116">If &lt;c&gt;true&lt;/c&gt;, &lt;see cref="F:System.DBNull.Value"&gt;DBNull.Value&lt;/see&gt; is accepted as input and also forms the
             return value of &lt;see cref="P:FolkerKinzel.CsvTools.Helpers.Converters.Specialized.DateTimeOffsetConverter.FallbackValue"/&gt;.</T>
  <T ID="F63B5B9DC534B116">If &lt;c&gt;true&lt;/c&gt;, &lt;see cref="F:System.DBNull.Value"&gt;DBNull.Value&lt;/see&gt; is accepted as input and also forms the
             return value of &lt;see cref="P:FolkerKinzel.CsvTools.Helpers.Converters.Specialized.DateTimeOffsetConverter.FallbackValue"/&gt;.</T>
  <T ID="EC6F8EF1F65C7A1E">If &lt;c&gt;true&lt;/c&gt;, &lt;see cref="F:System.DBNull.Value"&gt;DBNull.Value&lt;/see&gt; is accepted as input and also forms the
             return value of &lt;see cref="P:FolkerKinzel.CsvTools.Helpers.Converters.Specialized.GuidConverter.FallbackValue"/&gt;.</T>
  <T ID="F367FB7F65C7A1E">If &lt;c&gt;true&lt;/c&gt;, &lt;see cref="F:System.DBNull.Value"&gt;DBNull.Value&lt;/see&gt; is accepted as input and also forms the
             return value of &lt;see cref="P:FolkerKinzel.CsvTools.Helpers.Converters.Specialized.GuidConverter.FallbackValue"/&gt;.</T>
  <T ID="DA211DBF21734FE5">If &lt;c&gt;true&lt;/c&gt;, &lt;see cref="F:System.DBNull.Value"&gt;DBNull.Value&lt;/see&gt; is accepted as input and also forms the
             return value of &lt;see cref="P:FolkerKinzel.CsvTools.Helpers.Converters.Specialized.TimeSpanConverter.FallbackValue"/&gt;.</T>
  <T ID="B0A2C63121734FE5">If &lt;c&gt;true&lt;/c&gt;, &lt;see cref="F:System.DBNull.Value"&gt;DBNull.Value&lt;/see&gt; is accepted as input and also forms the
             return value of &lt;see cref="P:FolkerKinzel.CsvTools.Helpers.Converters.Specialized.TimeSpanConverter.FallbackValue"/&gt;.</T>
</Tsltn>